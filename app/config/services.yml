# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    picture_show_directory: '%kernel.project_dir%/web/uploads/picture_show'
    picture_show_directory_public: '/web/uploads/picture_show'
    omdb_endpoint: http://www.omdbapi.com/?i=tt3896198&apikey=118f043f
    app_bundle.serializer_subscriber.class: AppBundle\EventListener\ShowDeserializeEventListener


services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Twig\AppExtension:
        class: AppBundle\Twig\AppExtension
        tags: ['twig.extension']

    AppBundle\Service\FileUploader:
            arguments:
                $targetDir: '%picture_show_directory%'

    AppBundle\EventListener\ShowUploadListener:
            tags:
                - { name: doctrine.event_listener, event: prePersist }
                - { name: doctrine.event_listener, event: preUpdate }
                - { name: doctrine.event_listener, event: postLoad }
            arguments: ["@router"]

    AppBundle\EventListener\ShowDeserializeEventListener:
        class: %app_bundle.serializer_subscriber.class%
        tags:
            - { name: jms_serializer.event_subscriber }
        arguments: ['@doctrine.orm.entity_manager']

    AppBundle\ShowFinder\DbShowFinder:
            tags: ['show.finder']
            arguments: ['@doctrine.orm.entity_manager']

    AppBundle\ShowFinder\OMDBShowFinder:
            tags: ['show.finder']
            arguments: ['%omdb%', '@security.token_storage']

    AppBundle\Security\Authorization\ShowVoter:
            tags: ['security.voter']

    AppBundle\Security\Authorization\UserVoter:
                tags: ['security.voter']

    AppBundle\Security\Authentication\ApiUserPasswordAuthentication:
        arguments:
          $encoderFactory: '@security.encoder_factory.generic'
    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
